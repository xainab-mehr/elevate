version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: elevate_db
    environment:
      POSTGRES_DB: elevate_db
      POSTGRES_USER: elevate_user
      POSTGRES_PASSWORD: elevate_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - elevate_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U elevate_user -d elevate_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    container_name: elevate_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - elevate_network
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  app:
    build: .
    container_name: elevate_app
    environment:
      - DATABASE_URL=postgresql://elevate_user:elevate_password@db:5432/elevate_db
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    networks:
      - elevate_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

volumes:
  postgres_data:
  redis_data:

networks:
  elevate_network:
    driver: bridge
